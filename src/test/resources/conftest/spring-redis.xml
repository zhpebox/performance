<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:context="http://www.springframework.org/schema/context"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd">

     <!-- 扫描文件（自动将servicec层注入） -->
    <context:component-scan base-package="com.performance.redis"/>

    <!-- 引入redis配置 --> 
    <context:property-placeholder location="classpath:conftest/redis.properties" /> 
    <!-- Redis 配置 --> 
<!--     <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  -->
<!--         <property name="maxTotal" value="${redis.pool.maxTotal}" />  -->
<!--         <property name="maxIdle" value="${redis.pool.maxIdle}" />  -->
<!--         <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" />  -->
<!--         <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />  -->
<!--     </bean>  -->
    <!-- redis单节点数据库连接配置 --> 
<!--     <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">  -->
<!--         <property name="hostName" value="${redis.ip}" />  -->
<!--         <property name="port" value="${redis.port}" />  -->
<!--         <property name="password" value="${redis.pass}" />  -->
<!--         <property name="poolConfig" ref="jedisPoolConfig" />  -->
<!--     </bean>  -->
<!--     redisTemplate配置，redisTemplate是对Jedis的对redis操作的扩展，有更多的操作，封装使操作更便捷  -->
<!--     <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  -->
<!--         <property name="connectionFactory" ref="jedisConnectionFactory" />  -->
<!--     </bean> -->
    
    <!-- 配置Jedis链接服务器参数 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig"> 
        <property name="maxTotal" value="4096"/> 
        <property name="maxIdle" value="200"/> 
        <property name="maxWaitMillis" value="3000"/> 
        <property name="testOnBorrow" value="true" /> 
        <property name="testOnReturn" value="true" /> 
    </bean> 
<!--     注意constructor-arg 加上 参数类型 type，如果constructor-arg 未指定type 初始化的时候JedisPool有两个相同参数个数的构造方法会选择错误。 -->
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool"> 
        <constructor-arg index="0" ref="poolConfig"/> 
        <constructor-arg index="1" value="127.0.0.1" type="java.lang.String"/> 
        <constructor-arg index="2" value="6379" type="int"/> 
    </bean>
    
    <!-- Redis 配置 --> 
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"> 
<!--         <property name="maxTotal" value="${redis.pool.maxTotal}" />  -->
<!--         <property name="maxIdle" value="${redis.pool.maxIdle}" />  -->
<!--         <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" />  -->
<!--         <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />  -->
    </bean> 
    <!-- redis单节点数据库连接配置 --> 
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"> 
        <property name="hostName" value="127.0.0.1" /> 
        <property name="port" value="6379" /> 
        <!-- <property name="password" value="${redis.pass}" /> --> 
        <property name="poolConfig" ref="jedisPoolConfig" /> 
    </bean> 
    
    <!-- redisTemplate配置，redisTemplate是对Jedis的对redis操作的扩展，有更多的操作，封装使操作更便捷 --> 
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"> 
        <property name="connectionFactory" ref="jedisConnectionFactory" /> 
    </bean>
    

    
</beans>